lexer grammar pbiqLexer;

FROM: [Ff] [Rr] [Oo] [Mm];
AS: [Aa] [Ss];
IN: [Ii] [Nn];
WITH: [Ww] [Ii] [Tt] [Hh];
NATIVEREFERENCENAME: [Nn] [Aa] [Tt] [Ii] [Vv] [Ee] [Rr] [Ee] [Ff] [Ee] [Rr] [Ee] [Nn] [Cc] [Ee] [Nn] [Aa] [Mm] [Ee];
DOT: [.];
AND: [Aa] [Nn] [Dd];
OR: [Oo] [Rr];
NOT: [Nn] [Oo] [Tt];
WHERE: [Ww] [Hh] [Ee] [Rr] [Ee];
ORDERBY: [Oo] [Rr] [Dd] [Ee] [Rr] [Bb] [Yy];
ASCENDING:[Aa] [Ss] [Cc] [Ee] [Nn] [Dd] [Ii] [Nn] [Gg];
DESCENDING:[De] [Ee] [Ss] [Cc] [Ee] [Nn] [Dd] [Ii] [Nn] [Gg];
SELECT: [Ss] [Ee] [Ll] [Ee] [Cc] [Tt];
SKIP_: [Ss] [Kk] [Ii] [Pp];
TOP: [Tt] [Oo] [Pp];
USING: [Uu] [Ss] [Ii] [Nn] [Gg];
ANYVALUE: [Aa] [Nn] [Yy] [Vv] [Aa] [Ll] [Uu] [Ee];
DEFAULTVALUEOVERRIDESANCESTORS: [Dd] [Ee] [Ff] [Aa] [Uu] [Ll] [Tt] [Vv] [Aa] [Ll] [Uu] [Ee] [Oo] [Vv] [Ee] [Rr] [Rr] [Ii] [Dd] [Ee] [Ss] [Aa] [Nn] [Cc] [Ee] [Ss] [Tt] [Oo] [Rr] [Ss];
TRANSFORM: [Tt] [Rr] [Aa] [Nn] [Ss] [Ff] [Oo] [Rr] [Mm];
VIA: [Vv] [Ii] [Aa];
NULL: [Nn] [Uu] [Ll] [Ll];
TRUE: [Tt] [Rr] [Uu] [Ee];
FALSE: [Ff] [Aa] [Ll] [Ss] [Ee];
BETWEEN: [Bb] [Ee] [Tt] [Ww] [Ee] [Ee] [Nn];
CONTAINS: [Cc] [Oo] [Nn] [Tt] [Aa] [Ii] [Nn] [Ss];
AS_: [Aa] [Ss];
INTEGER: [0-9]+;
DECIMAL: [0-9]+ '.' [0-9]*;
DATE: [0-9] [0-9] [0-9] [0-9] '-' [0-9] [0-9] '-' [0-9] [0-9];
DATETIMESECOND: DATE 'T' [0-9] [0-9] ':' [0-9] [0-9] ':' [0-9] [0-9];
DATETIME: DATETIMESECOND '.' [0-9] [0-9] [0-9] [0-9] [0-9] [0-9] [0-9];
SINGLE_QUOTE: '\'';
LPAREN: '(';
COMMA: ',';
RPAREN: ')';
GT: '>';
GTE: '>=';
LT: '<';
LTE: '<=';
EQ: '=';
STRING_LITERAL: '\'' .+? '\'';
IDENTIFIER : ([A-Za-z0-9_]+) | ('[' .+? ']');
BINARY_ARITHMETIC_OPERATOR: '+' | '-' | '*' | '/';

WS: [ \r\n\t] -> channel(HIDDEN);

